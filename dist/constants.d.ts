export declare const ORGANISELY_API_BASE_URL = "https://api.organisely.com/v1";
export declare const ORGANISELY_OAUTH_BASE_URL = "https://organisely.com/oauth";
export declare const SDK_VERSION = "1.0.0";
export declare const DEFAULT_CONFIG: {
    timeout: number;
    retries: number;
    retryDelay: number;
    userAgent: string;
    maxRetryDelay: number;
    backoffMultiplier: number;
};
export declare const EVENT_TYPES: {
    readonly USER_LOGIN: "user.login";
    readonly USER_LOGOUT: "user.logout";
    readonly USER_IDLE: "user.idle";
    readonly USER_ACTIVE: "user.active";
    readonly USER_REGISTERED: "user.registered";
    readonly USER_UPDATED: "user.updated";
    readonly HABIT_CREATED: "habit.created";
    readonly HABIT_UPDATED: "habit.updated";
    readonly HABIT_DELETED: "habit.deleted";
    readonly HABIT_COMPLETED: "habit.completed";
    readonly HABIT_MISSED: "habit.missed";
    readonly HABIT_STREAK_BROKEN: "habit.streak_broken";
    readonly HABIT_STREAK_MILESTONE: "habit.streak_milestone";
    readonly HABIT_REMINDER_SENT: "habit.reminder_sent";
    readonly INTEGRATION_INSTALLED: "integration.installed";
    readonly INTEGRATION_UNINSTALLED: "integration.uninstalled";
    readonly INTEGRATION_UPDATED: "integration.updated";
    readonly INTEGRATION_SCOPES_UPDATED: "integration.scopes_updated";
    readonly INTEGRATION_ERROR: "integration.error";
    readonly INTEGRATION_WEBHOOK_FAILED: "integration.webhook_failed";
    readonly EMAIL_RECEIVED: "email.received";
    readonly EMAIL_SENT: "email.sent";
    readonly EMAIL_IMPORTANT: "email.important";
    readonly EMAIL_UNREAD_COUNT: "email.unread_count";
    readonly EMAIL_ARCHIVED: "email.archived";
    readonly EMAIL_DELETED: "email.deleted";
    readonly CALENDAR_EVENT_CREATED: "calendar.event_created";
    readonly CALENDAR_EVENT_UPDATED: "calendar.event_updated";
    readonly CALENDAR_EVENT_DELETED: "calendar.event_deleted";
    readonly CALENDAR_EVENT_UPCOMING: "calendar.event_upcoming";
    readonly CALENDAR_EVENT_STARTED: "calendar.event_started";
    readonly CALENDAR_EVENT_ENDED: "calendar.event_ended";
    readonly CALENDAR_EVENT_MISSED: "calendar.event_missed";
    readonly CALENDAR_REMINDER_SENT: "calendar.reminder_sent";
    readonly AI_INSIGHT_GENERATED: "ai.insight_generated";
    readonly AI_RECOMMENDATION: "ai.recommendation";
    readonly AI_ACTION_COMPLETED: "ai.action_completed";
    readonly AI_LEARNING_UPDATED: "ai.learning_updated";
    readonly BOT_TRIGGERED: "bot.triggered";
    readonly BOT_ACTION_COMPLETED: "bot.action_completed";
    readonly BOT_ERROR: "bot.error";
    readonly BOT_RATE_LIMITED: "bot.rate_limited";
    readonly SYSTEM_MAINTENANCE: "system.maintenance";
    readonly SYSTEM_UPDATE: "system.update";
    readonly SYSTEM_ERROR: "system.error";
};
export declare const SCOPES: {
    readonly READ_HABITS: "read:habits";
    readonly READ_EMAILS: "read:emails";
    readonly READ_CALENDAR: "read:calendar";
    readonly READ_EVENTS: "read:events";
    readonly READ_PROFILE: "read:profile";
    readonly READ_INTEGRATIONS: "read:integrations";
    readonly READ_ANALYTICS: "read:analytics";
    readonly WRITE_HABITS: "write:habits";
    readonly WRITE_EMAILS: "write:emails";
    readonly WRITE_CALENDAR: "write:calendar";
    readonly WRITE_EVENTS: "write:events";
    readonly WRITE_PROFILE: "write:profile";
    readonly WRITE_INTEGRATIONS: "write:integrations";
    readonly ADMIN_USERS: "admin:users";
    readonly ADMIN_INTEGRATIONS: "admin:integrations";
    readonly ADMIN_SYSTEM: "admin:system";
    readonly BOT_TRIGGER: "bot:trigger";
    readonly BOT_ACTION: "bot:action";
    readonly BOT_WEBHOOK: "bot:webhook";
};
export declare const API_ENDPOINTS: {
    readonly USERS: "/users";
    readonly USER_PROFILE: "/users/profile";
    readonly USER_PREFERENCES: "/users/preferences";
    readonly HABITS: "/habits";
    readonly HABIT_COMPLETIONS: "/habits/:id/completions";
    readonly HABIT_STREAKS: "/habits/:id/streaks";
    readonly EMAILS: "/emails";
    readonly EMAIL_SEND: "/emails/send";
    readonly EMAIL_ATTACHMENTS: "/emails/:id/attachments";
    readonly CALENDAR_EVENTS: "/calendar/events";
    readonly CALENDAR_CALENDARS: "/calendar/calendars";
    readonly CALENDAR_ATTENDEES: "/calendar/events/:id/attendees";
    readonly INTEGRATIONS: "/integrations";
    readonly INTEGRATION_WEBHOOKS: "/integrations/:id/webhooks";
    readonly INTEGRATION_OAUTH: "/integrations/:id/oauth";
    readonly EVENTS: "/events";
    readonly EVENTS_TRACK: "/events/track";
    readonly EVENTS_BROADCAST: "/events/broadcast";
    readonly HEALTH: "/health";
    readonly VERSION: "/version";
    readonly STATUS: "/status";
};
export declare const HTTP_STATUS: {
    readonly OK: 200;
    readonly CREATED: 201;
    readonly NO_CONTENT: 204;
    readonly BAD_REQUEST: 400;
    readonly UNAUTHORIZED: 401;
    readonly FORBIDDEN: 403;
    readonly NOT_FOUND: 404;
    readonly CONFLICT: 409;
    readonly METHOD_NOT_ALLOWED: 405;
    readonly UNPROCESSABLE_ENTITY: 422;
    readonly TOO_MANY_REQUESTS: 429;
    readonly INTERNAL_SERVER_ERROR: 500;
    readonly BAD_GATEWAY: 502;
    readonly SERVICE_UNAVAILABLE: 503;
};
export declare const ERROR_CODES: {
    readonly INVALID_API_KEY: "INVALID_API_KEY";
    readonly INVALID_TOKEN: "INVALID_TOKEN";
    readonly TOKEN_EXPIRED: "TOKEN_EXPIRED";
    readonly INSUFFICIENT_PERMISSIONS: "INSUFFICIENT_PERMISSIONS";
    readonly INSUFFICIENT_SCOPES: "INSUFFICIENT_SCOPES";
    readonly VALIDATION_ERROR: "VALIDATION_ERROR";
    readonly MISSING_REQUIRED_FIELD: "MISSING_REQUIRED_FIELD";
    readonly INVALID_FORMAT: "INVALID_FORMAT";
    readonly RESOURCE_NOT_FOUND: "RESOURCE_NOT_FOUND";
    readonly RESOURCE_ALREADY_EXISTS: "RESOURCE_ALREADY_EXISTS";
    readonly RESOURCE_CONFLICT: "RESOURCE_CONFLICT";
    readonly RATE_LIMIT_EXCEEDED: "RATE_LIMIT_EXCEEDED";
    readonly TOO_MANY_REQUESTS: "TOO_MANY_REQUESTS";
    readonly RATE_LIMITED: "RATE_LIMITED";
    readonly INTEGRATION_ERROR: "INTEGRATION_ERROR";
    readonly WEBHOOK_FAILED: "WEBHOOK_FAILED";
    readonly OAUTH_ERROR: "OAUTH_ERROR";
    readonly NETWORK_ERROR: "NETWORK_ERROR";
    readonly INTERNAL_ERROR: "INTERNAL_ERROR";
    readonly SERVICE_UNAVAILABLE: "SERVICE_UNAVAILABLE";
    readonly MAINTENANCE_MODE: "MAINTENANCE_MODE";
};
export declare const DEFAULT_HEADERS: {
    readonly 'Content-Type': "application/json";
    readonly Accept: "application/json";
    readonly 'User-Agent': "Organisely-SDK/1.0.0";
};
export declare const RETRY_CONFIG: {
    readonly maxRetries: 3;
    readonly retryDelay: 1000;
    readonly backoffMultiplier: 2;
    readonly maxRetryDelay: 30000;
};
export declare const WEBHOOK_CONFIG: {
    readonly timeout: 30000;
    readonly maxRetries: 3;
    readonly retryDelay: 1000;
};
export declare const OAUTH_CONFIG: {
    readonly stateLength: 32;
    readonly codeVerifierLength: 128;
    readonly pkceMethod: "S256";
};
//# sourceMappingURL=constants.d.ts.map